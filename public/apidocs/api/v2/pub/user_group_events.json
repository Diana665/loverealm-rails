{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "",
  "resourcePath": "user_group_events",
  "apis": [
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/promoted_events",
      "operations": [
        {
          "summary": "Return the list of promotions of this event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "type": "integer",
              "description": "Indicates number of pagination",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "type": "integer",
              "description": "Indicates the quantity of items per page, default 20",
              "required": false
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#promoted_events",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/attend",
      "operations": [
        {
          "summary": "Current user accepts to attend to this event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#attend",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/no_attend",
      "operations": [
        {
          "summary": "Current user cancel attend to this event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#no_attend",
          "method": "delete"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/buy_ticket",
      "operations": [
        {
          "summary": "User group members can buy tickets to assist to current event.",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "payment_method",
              "type": "string",
              "description": "Payment method: paypal|stripe|rave (PAYMENT PARAMS)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "stripe_token",
              "type": "string",
              "description": "Stripe payment token (required if stripe method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "stripe_transaction_id",
              "type": "string",
              "description": "Stripe transaction ID (required if stripe method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "paypal_token",
              "type": "string",
              "description": "Paypal payment token (required if paypal method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "rave_token",
              "type": "string",
              "description": "Rave payment token (required if rave method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "save_card",
              "type": "boolean",
              "description": "Permit to save current transaction card token to be used it in the future. Only for Rave, Stripe",
              "required": false
            },
            {
              "paramType": "form",
              "name": "payment_card_id",
              "type": "integer",
              "description": "Permit to pay using saved card token. Get list of saved cards here: GET /api/v2/pub/user_finances/cards",
              "required": false
            },
            {
              "paramType": "form",
              "name": "payment_recurring_period",
              "type": "string",
              "description": "Permit to repeat this transaction many times (Recurring Payment), where: number value means => every x days OR string value must be => daily,weekly,monthly,quarterly,biannually,yearly.",
              "required": false
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#buy_ticket",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/promote",
      "operations": [
        {
          "summary": "Promotes current event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "photo",
              "type": "file",
              "description": "Promotion Photo",
              "required": true
            },
            {
              "paramType": "form",
              "name": "website",
              "type": "string",
              "description": "Website of the promotion",
              "required": false
            },
            {
              "paramType": "form",
              "name": "age_range",
              "type": "string",
              "description": "Promotion filter age range 0 until 100, sample: 12,78",
              "required": false
            },
            {
              "paramType": "form",
              "name": "gender",
              "type": "integer",
              "description": "Promotion filter to a single gender: empty => all, 0=> Male, 1 => Female",
              "required": false
            },
            {
              "paramType": "form",
              "name": "budget",
              "type": "integer",
              "description": "Promotion Budget",
              "required": true
            },
            {
              "paramType": "form",
              "name": "period_until",
              "type": "date",
              "description": "Promotion date until, format: 2017-10-28",
              "required": true
            },
            {
              "paramType": "form",
              "name": "demographics[]",
              "type": "string",
              "description": "Array of demographics. Promotion filter by demographics, empty => all (data here: GET /api/v2/pub/users/demographics)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "locations[]",
              "type": "string",
              "description": "Array of countries. Promotion filter by country, empty => all (data here: GET /api/v2/pub/users/countries)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "payment_method",
              "type": "string",
              "description": "Payment method: paypal|stripe|rave (PAYMENT PARAMS)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "stripe_token",
              "type": "string",
              "description": "Stripe payment token (required if stripe method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "stripe_transaction_id",
              "type": "string",
              "description": "Stripe transaction ID (required if stripe method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "paypal_token",
              "type": "string",
              "description": "Paypal payment token (required if paypal method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "rave_token",
              "type": "string",
              "description": "Rave payment token (required if rave method)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "save_card",
              "type": "boolean",
              "description": "Permit to save current transaction card token to be used it in the future. Only for Rave, Stripe",
              "required": false
            },
            {
              "paramType": "form",
              "name": "payment_card_id",
              "type": "integer",
              "description": "Permit to pay using saved card token. Get list of saved cards here: GET /api/v2/pub/user_finances/cards",
              "required": false
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#promote",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/promotions",
      "operations": [
        {
          "summary": "Return the list of promotions of this event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            },
            {
              "paramType": "query",
              "name": "page",
              "type": "integer",
              "description": "Indicates number of pagination",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "type": "integer",
              "description": "Indicates the quantity of items per page, default 20",
              "required": false
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#promotions",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/verify_ticket",
      "operations": [
        {
          "summary": "As an administrator of current event group, you can verify if this ticket is valid or not.",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            },
            {
              "paramType": "query",
              "name": "code",
              "type": "integer",
              "description": "Ticket code",
              "required": true
            }
          ],
          "notes": "Return \"valid\" if ticket is valid to be redeemed, \"invalid\" if ticket is already redeemed or not exist.",
          "responseMessages": [
            {
              "code": 200,
              "responseModel": null,
              "message": "{res: invalid | used | valid}"
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#verify_ticket",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}/redeem_ticket",
      "operations": [
        {
          "summary": "As an administrator of current event group, you can mark a ticket as redeemed for a user.",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            },
            {
              "paramType": "query",
              "name": "code",
              "type": "integer",
              "description": "Ticket code",
              "required": true
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#redeem_ticket",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events",
      "operations": [
        {
          "summary": "List of events of current group",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "query",
              "name": "upcoming",
              "type": "boolean",
              "description": "If present will filter only upcoming events",
              "required": false
            },
            {
              "paramType": "query",
              "name": "page",
              "type": "integer",
              "description": "Indicates number of pagination",
              "required": false
            },
            {
              "paramType": "query",
              "name": "per_page",
              "type": "integer",
              "description": "Indicates the quantity of items per page, default 20",
              "required": false
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events",
      "operations": [
        {
          "summary": "Create a new Event for current group",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "Event Title",
              "required": true
            },
            {
              "paramType": "form",
              "name": "description",
              "type": "text",
              "description": "Event Title",
              "required": true
            },
            {
              "paramType": "form",
              "name": "ticket_url",
              "type": "string",
              "description": "Ticket url",
              "required": false
            },
            {
              "paramType": "form",
              "name": "photo",
              "type": "file",
              "description": "Event Photo",
              "required": false
            },
            {
              "paramType": "form",
              "name": "location",
              "type": "string",
              "description": "Event Location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "start_at",
              "type": "timestamp",
              "description": "Datetime when the event will start in UNIX time, sample: 1507672969129",
              "required": true
            },
            {
              "paramType": "form",
              "name": "end_at",
              "type": "timestamp",
              "description": "Datetime when the event will end in UNIX time, sample: 1507672969129",
              "required": true
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}",
      "operations": [
        {
          "summary": "Update an event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event ID",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "Event Title",
              "required": true
            },
            {
              "paramType": "form",
              "name": "description",
              "type": "text",
              "description": "Event Title",
              "required": true
            },
            {
              "paramType": "form",
              "name": "ticket_url",
              "type": "string",
              "description": "Ticket url",
              "required": false
            },
            {
              "paramType": "form",
              "name": "photo",
              "type": "file",
              "description": "Event Photo",
              "required": false
            },
            {
              "paramType": "form",
              "name": "location",
              "type": "string",
              "description": "Event Location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "start_at",
              "type": "timestamp",
              "description": "Datetime when the event will start in UNIX time, sample: 1507672969129",
              "required": true
            },
            {
              "paramType": "form",
              "name": "end_at",
              "type": "timestamp",
              "description": "Datetime when the event will end in UNIX time, sample: 1507672969129",
              "required": true
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/api/v2/pub/user_groups/{user_group_id}/events/{id}",
      "operations": [
        {
          "summary": "Destroy an event",
          "parameters": [
            {
              "paramType": "path",
              "name": "user_group_id",
              "type": "integer",
              "description": "User Group ID",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Event id",
              "required": true
            }
          ],
          "nickname": "Api::V2::Pub::UserGroupEvents#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null
}