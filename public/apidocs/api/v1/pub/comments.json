{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "",
  "resourcePath": "comments",
  "apis": [
    {
      "path": "/api/v1/pub/comments/{id}/toggle_like",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "query",
              "name": "content_id",
              "type": "integer",
              "description": "Content ID (Owner of the comment)",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Comment ID which will be liked/unliked",
              "required": true
            },
            {
              "paramType": "query",
              "name": "kind",
              "type": "string",
              "description": "Kind of action: like | unlike",
              "required": true
            }
          ],
          "notes": "Toggle like/unlike a comment of a specific Content for current user",
          "nickname": "Api::V1::Pub::Comments#toggle_like",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/pub/comments",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "query",
              "name": "content_id",
              "type": "integer",
              "description": "Content ID (Owner of comments)",
              "required": true
            },
            {
              "paramType": "query",
              "name": "sort_by",
              "type": "string",
              "description": "Order comments by its attributes: qty_loves | qty_answers | recent (default created_at)",
              "required": false
            }
          ],
          "notes": "Show all comments of a specific Contents",
          "nickname": "Api::V1::Pub::Comments#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/pub/comments",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "query",
              "name": "content_id",
              "type": "integer",
              "description": "Content ID (Owner of the comment)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "body",
              "type": "string",
              "description": "Comment value (required if file is empty)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "file",
              "type": "file",
              "description": "Comment image/audio/video file",
              "required": false
            }
          ],
          "notes": "Create a new comment for a specific Content",
          "nickname": "Api::V1::Pub::Comments#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/api/v1/pub/comments/{id}",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "query",
              "name": "content_id",
              "type": "integer",
              "description": "Content ID (Owner of the comment)",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Comment ID",
              "required": true
            }
          ],
          "notes": "Show information of a comment of a specific Content",
          "nickname": "Api::V1::Pub::Comments#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/api/v1/pub/comments/{id}",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "query",
              "name": "content_id",
              "type": "integer",
              "description": "Content ID (Owner of the comment)",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Comment ID which will be updated",
              "required": true
            },
            {
              "paramType": "form",
              "name": "body",
              "type": "text",
              "description": "Comment value (required if file is empty)",
              "required": false
            },
            {
              "paramType": "form",
              "name": "file",
              "type": "file",
              "description": "Comment image/audio/video file",
              "required": false
            }
          ],
          "notes": "Update an existent comment of a specific Content",
          "nickname": "Api::V1::Pub::Comments#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/api/v1/pub/comments/{id}",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "query",
              "name": "content_id",
              "type": "integer",
              "description": "Content ID (Owner of the comment)",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Comment ID which will be destroyed",
              "required": true
            }
          ],
          "notes": "Destroy an existent comment of a specific Content",
          "nickname": "Api::V1::Pub::Comments#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null
}